# This is a basic workflow to help you get started with Actions

name: CI

on:
  # Triggers the workflow on push or pull request events but only for the "main" branch
  push:
    branches: [ "main" ]

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

permissions:
    contents: write

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  # This workflow contains a single job called "build"
  build:
    # The type of runner that the job will run on
    runs-on: ubuntu-latest

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - uses: actions/checkout@v4

      - name: Requirements
        run: |
          pip install -r src/requirements.txt

      - name: Empty Files
        run: |
          touch output/metrics.json
          touch output/model_metrics.json
          touch output/model.pkl

          # Commit here only if there was any changes
          if git diff --quiet; then
            echo "No changes to commit, skipping commit."
          else
            git config user.name github-actions
            git config user.email github-actions@github.com
            git add -f output/
            git commit -m "empty files for dvc"
            git push
          fi
          
      - name: DVC
        run: |
          git config user.name github-actions
          git config user.email github-actions@github.com
          git rm -r --cached output/
          git commit -m "stop tracking outputs"
          dvc repro
          dvc dag
          dvc dag --outs

      - name: Git Update
        run: |
          last_commit=$(git log --format="%H" -n 1)
          git config user.name github-actions
          git config user.email github-actions@github.com
          git add -f output/ .dvc/cache dvc.lock
          git commit -m "refresh files that were generated in commit $last_commit"
          git push

